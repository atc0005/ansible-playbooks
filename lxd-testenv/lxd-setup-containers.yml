---

# vim: ts=2:sw=2:et:ft=yaml
# -*- mode: yaml; indent-tabs-mode: nil; tab-width: 2 -*-
# code: language=yaml insertSpaces=true tabSize=2

# https://docs.ansible.com/ansible/latest/modules/lxd_container_module.html

- name: Create LXD containers for Ansible test environment
  hosts: localhost
  connection: local

  # TODO: Cleanup, move to defaults/main.yml when migrating to lxd-testenv role
  vars_files:
    - vars/main.yml

  tasks:

    - name: Create containers
      delegate_to: localhost
      lxd_container:
        name: "{{ item }}"
        state: started
        source:
          type: image
          mode: pull
          server: https://images.linuxcontainers.org
          protocol: lxd
          alias: "{{ hostvars[item]['source'] }}"
        profiles: ["default"]
        wait_for_ipv4_addresses: true
        timeout: 600
      with_items:
        - "{{ groups['ubuntu'] }}"
        - "{{ groups['centos'] }}"
      tags:
        - create

- name: Bootstrap LXD containers for Ansible test environment
  hosts: all
  connection: local
  vars:
    # Configured in hosts file, but specifying here as well for clarity
    ansible_connection: lxd

  # TODO: Cleanup, move to defaults/main.yml when migrating to lxd-testenv role
  vars_files:
    - vars/main.yml

  # Python is not present at this point, so we cannot gather facts
  # https://docs.ansible.com/ansible/latest/modules/raw_module.html
  gather_facts: false
  tasks:

    - name: Confirm python is installed in container
      raw: test -e /usr/bin/python
      register: python_install_check
      failed_when: python_install_check.rc not in [0, 1]
      changed_when: false

    # Triggered when -vvvv is specified
    # https://docs.ansible.com/ansible/latest/modules/debug_module.html
    - name: DEBUG | Display all known facts about host
      debug:
        var: hostvars[inventory_hostname]
        verbosity: 4

    # Triggered when -vv is specified
    - name: DEBUG | Show python check results
      debug:
        var: python_install_check.stdout
        verbosity: 2

    # Only occurs with containers without Python
    - name: Install Python on Ubuntu containers
      raw: apt-get update && apt-get install -y python
      when:
        - python_install_check.rc == 1
        - inventory_hostname in groups['ubuntu']

    # Only occurs with containers without Python
    - name: Install Python on CentOS containers
      raw: yum install -y python
      when:
        - python_install_check.rc == 1
        - inventory_hostname in groups['centos']


- name: Prep containers for management via SSH
  hosts: all
  connection: local
  gather_facts: yes
  vars:
    # Configured in hosts file, but specifying here as well for clarity
    # WARNING: Do not specify this for ALL plays, just ones where we
    # will be directly manipulating containers. Attempts to directly
    # modify the host with this value defined may (will?) fail.
    ansible_connection: lxd

  # TODO: Cleanup, move to defaults/main.yml when migrating to lxd-testenv role
  vars_files:
    - vars/main.yml

  tasks:

    - name: Install required packages
      package:
        name:
          - openssh-server
          - sudo
        state: present

    - name: Create ansible group
      group:
        name: "ansible"
        state: present
        system: no

    - name: Create ansible user
      user:
        name: "ansible"
        # Explicitly specify this in case the default behavior ever changes
        # Credit: @auadamw
        create_home: yes
        comment: Service account used by Ansible to configure system
        group: "ansible"
        state: present
        system: no

    - name: "Create ansible sudoers file in container"
      copy:
        content: 'ansible ALL=(ALL) NOPASSWD: ALL'
        dest: /etc/sudoers.d/ansible'
        owner: root
        group: root
        mode: 0440

    - name: Deploy current user SSH public key to specific users in container
      authorized_key:
        user: "{{ item }}"
        state: present
        key: "{{ ssh_public_key_for_containers }}"
      with_items:
        - root
        - ansible

    - name: Start SSH, set it to start at boot
      service:
        name: sshd
        state: started
        enabled: yes

    - name: "Update hosts file in container"
      lineinfile:
        dest: /etc/hosts
        regexp: '.*{{ item}}$'
        line: "{{ hostvars[item].ansible_default_ipv4.address }} {{ item }}"
        state: present
      when:
        - hostvars[item].ansible_default_ipv4.address is defined
        - update_container_hosts_file
      with_items:
        - "{{ groups['all'] }}"

...
