---

# vim: ts=2:sw=2:et:ft=yaml
# -*- mode: yaml; indent-tabs-mode: nil; tab-width: 2 -*-
# code: language=yaml insertSpaces=true tabSize=2

# https://docs.ansible.com/ansible/latest/modules/lxd_container_module.html

# An example for creating Ubuntu containers and installing python in each

- name: Update container host
  hosts: localhost
  connection: local
  gather_facts: yes

  # Likely needed to avoid race conditions (refs atc0005/ansible-playbooks#11)
  serial: 1

  # TODO: Cleanup, move to defaults/main.yml when migrating to lxd-testenv role
  vars_files:
    - vars/main.yml

  tasks:

    # https://groups.google.com/forum/#!topic/Ansible-project/n5bYP5BIbcQ
    - name: Gather facts
      setup:
      become: no
      delegate_to: '{{ item }}'
      delegate_facts: true
      with_items:
        - "{{ groups['all'] }}"
      # Any special meaning for this variable name?
      register: setup

    # Generate /etc/hosts with Ansible
    # https://gist.github.com/rothgar/8793800
    - name: "Update hosts file on LXD host"
      become: yes
      lineinfile:
        dest: /etc/hosts
        regexp: '.*{{ hostvars[item].inventory_hostname }}$'
        line: "{{ hostvars[item].ansible_default_ipv4.address }} {{ item }}"
        state: present
      when:
        - hostvars[item].ansible_default_ipv4.address is defined
        - update_host_etc_hosts_file
      with_items:
        - "{{ groups['all'] }}"

    # https://stackoverflow.com/questions/30226113/ansible-ssh-prompt-known-hosts-issue
    - name: Scan each host for its ssh public key
      become: no
      shell: |
        #ssh-keyscan -H {{ hostvars[item].inventory_hostname }},{{ hostvars[item].ansible_default_ipv4.address }}
        ssh-keyscan {{ hostvars[item].inventory_hostname }},{{ hostvars[item].ansible_default_ipv4.address }}
      register: ssh_known_host_results
      changed_when: ssh_known_host_results.rc != 0
      failed_when: ssh_known_host_results.rc != 0
      when:
        - hostvars[item].ansible_default_ipv4.address is defined
        - update_host_known_hosts_file
      with_items:
        - "{{ groups['all'] }}"

    - name: Add/update the public key in the '{{ ssh_known_hosts_file }}'
      known_hosts:
        name: "{{ item.item }}"
        key: "{{ item.stdout }}"
        path: "{{ ssh_known_hosts_file }}"
      when:
        - update_host_known_hosts_file
      with_items: "{{ ssh_known_host_results.results }}"

